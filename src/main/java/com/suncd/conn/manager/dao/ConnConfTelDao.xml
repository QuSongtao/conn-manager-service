<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suncd.conn.manager.dao.ConnConfTelDao">
  <resultMap id="BaseResultMap" type="com.suncd.conn.manager.entity.ConnConfTel">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="telId" jdbcType="VARCHAR" property="telId" />
    <result column="telName" jdbcType="VARCHAR" property="telName" />
    <result column="sender" jdbcType="VARCHAR" property="sender" />
    <result column="senderName" jdbcType="VARCHAR" property="senderName" />
    <result column="receiver" jdbcType="VARCHAR" property="receiver" />
    <result column="receiverName" jdbcType="VARCHAR" property="receiverName" />
    <result column="queueName" jdbcType="VARCHAR" property="queueName" />
  </resultMap>
  <sql id="Base_Column_List">
    id, telId, telName, sender,senderName,receiver,receiverName, queueName
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from conn_conf_tel
    where id = #{id,jdbcType=CHAR}
  </select>
  <select id="selectByTelId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from conn_conf_tel
    where telId like '%'||#{telId,jdbcType=VARCHAR}||'%'
    order by receiver,telId asc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from conn_conf_tel
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insertSelective" parameterType="com.suncd.conn.manager.entity.ConnConfTel">
    insert into conn_conf_tel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="telId != null">
        telId,
      </if>
      <if test="telName != null">
        telName,
      </if>
      <if test="sender != null">
        sender,
      </if>
      <if test="senderName != null">
        senderName,
      </if>
      <if test="receiver != null">
        receiver,
      </if>
      <if test="receiverName != null">
        receiverName,
      </if>
      <if test="queueName != null">
        queueName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=CHAR},
      <if test="telId != null">
        #{telId,jdbcType=VARCHAR},
      </if>
      <if test="telName != null">
        #{telName,jdbcType=VARCHAR},
      </if>
      <if test="sender != null">
        #{sender,jdbcType=VARCHAR},
      </if>
      <if test="senderName != null">
        #{senderName,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null">
        #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="receiverName != null">
        #{receiverName,jdbcType=VARCHAR},
      </if>
      <if test="queueName != null">
        #{queueName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.suncd.conn.manager.entity.ConnConfTel">
    update conn_conf_tel
    <set>
      <if test="telId != null">
        telId = #{telId,jdbcType=VARCHAR},
      </if>
      <if test="telName != null">
        telName = #{telName,jdbcType=VARCHAR},
      </if>
      <if test="sender != null">
        sender = #{sender,jdbcType=VARCHAR},
      </if>
      <if test="senderName != null">
        senderName = #{senderName,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null">
        receiver = #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="receiverName != null">
        receiverName = #{receiverName,jdbcType=VARCHAR},
      </if>
      <if test="queueName != null">
        queueName = #{queueName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.suncd.conn.manager.entity.ConnConfTel">
    update conn_conf_tel
    set telId = #{telId,jdbcType=VARCHAR},
      telName = #{telName,jdbcType=VARCHAR},
      sender = #{sender,jdbcType=VARCHAR},
      senderName = #{senderName,jdbcType=VARCHAR},
      receiver = #{receiver,jdbcType=VARCHAR},
      receiverName = #{receiverName,jdbcType=VARCHAR},
      queueName = #{queueName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>